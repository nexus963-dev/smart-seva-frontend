'use client'
import { motion } from 'framer-motion'
import { useState } from 'react'
import { FaStar, FaChevronLeft, FaChevronRight } from 'react-icons/fa'

const testimonials = [
  {
    name: "‡§∞‡§æ‡§ú‡•á‡§∂ ‡§ï‡•Å‡§Æ‡§æ‡§∞",
    position: "‡§ï‡§ø‡§∏‡§æ‡§®, ‡§π‡§∞‡§ø‡§Ø‡§æ‡§£‡§æ",
    content: "Smart Kisan Seva ‡§®‡•á ‡§Æ‡•á‡§∞‡•Ä ‡§´‡§∏‡§≤ ‡§Æ‡•á‡§Ç ‡§≤‡§ó‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§ï‡•ã ‡§™‡§π‡§ö‡§æ‡§®‡§ï‡§∞ ‡§Æ‡•Å‡§ù‡•á ‡§∏‡§π‡•Ä ‡§á‡§≤‡§æ‡§ú ‡§¨‡§§‡§æ‡§Ø‡§æ‡•§ ‡§Ö‡§¨ ‡§Æ‡•á‡§∞‡•Ä ‡§™‡•à‡§¶‡§æ‡§µ‡§æ‡§∞ 30% ‡§¨‡§¢‡§º ‡§ó‡§à ‡§π‡•à‡•§ ‡§¨‡§π‡•Å‡§§ ‡§π‡•Ä ‡§â‡§™‡§Ø‡•ã‡§ó‡•Ä ‡§ê‡§™ ‡§π‡•à‡•§",
    rating: 5,
    avatar: "üë®‚Äçüåæ"
  },
  {
    name: "‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ", 
    position: "‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û, ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞",
    content: "‡§Æ‡§Ç‡§°‡•Ä ‡§ï‡•á ‡§¶‡§æ‡§Æ ‡§Æ‡§ø‡§≤‡§®‡§æ ‡§î‡§∞ ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Æ‡§ø‡§≤‡§®‡§æ ‡§¨‡§π‡•Å‡§§ ‡§´‡§æ‡§Ø‡§¶‡•á‡§Æ‡§Ç‡§¶ ‡§π‡•à‡•§ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤ ‡§≠‡•Ä ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§∞‡§¶‡§æ‡§® ‡§π‡•à ‡§Ø‡§π ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ‡•§",
    rating: 5,
    avatar: "üë©‚Äçüåæ"
  },
  {
    name: "‡§Ö‡§∞‡•Å‡§£ ‡§™‡§ü‡•á‡§≤",
    position: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø‡§∂‡•Ä‡§≤ ‡§ï‡§ø‡§∏‡§æ‡§®, ‡§ó‡•Å‡§ú‡§∞‡§æ‡§§",
    content: "AI ‡§∏‡•á ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§π‡§ö‡§æ‡§®‡§®‡§æ, ‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§≤‡§∞‡•ç‡§ü, ‡§î‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä - ‡§∏‡§¨ ‡§ï‡•Å‡§õ ‡§è‡§ï ‡§ú‡§ó‡§π ‡§Æ‡§ø‡§≤ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ Tech-savvy farming ‡§ï‡•á ‡§≤‡§ø‡§è perfect ‡§π‡•à‡•§",
    rating: 5,
    avatar: "üßë‚Äçüåæ"
  }
]

export default function Testimonials() {
  const [activeIndex, setActiveIndex] = useState(0)

  const nextTestimonial = () => {
    setActiveIndex((prev) => (prev + 1) % testimonials.length)
  }

  const prevTestimonial = () => {
    setActiveIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length)
  }

  return (
    <section id="testimonials" className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <motion.div 
          className="text-center mb-16"
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <h2 className="text-4xl font-bold text-gray-800 mb-4">
            ‡§ï‡§ø‡§∏‡§æ‡§® ‡§≠‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡•á <span className="text-green-600">‡§Ö‡§®‡•Å‡§≠‡§µ</span>
          </h2>
          <div className="w-12 h-1 bg-green-600 mx-auto mb-6"></div>
          <p className="text-gray-600 max-w-2xl mx-auto">
            ‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§ï‡§ø‡§∏‡§æ‡§® ‡§≠‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§≠‡§∞‡•ã‡§∏‡§æ ‡§î‡§∞ ‡§â‡§®‡§ï‡•á ‡§∏‡§´‡§≤‡§§‡§æ ‡§ï‡•Ä ‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡•á‡§∞‡§£‡§æ ‡§π‡•à‡§Ç‡•§
          </p>
        </motion.div>

        <div className="max-w-4xl mx-auto">
          <div className="relative">
            <motion.div
              key={activeIndex}
              className="bg-gradient-to-r from-green-600 to-emerald-500 rounded-3xl p-8 text-center"
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.5 }}
            >
              <div className="bg-white rounded-2xl p-8">
                <div className="text-6xl mb-4">{testimonials[activeIndex].avatar}</div>
                <div className="flex justify-center mb-4">
                  {[...Array(testimonials[activeIndex].rating)].map((_, i) => (
                    <FaStar key={i} className="text-yellow-400 text-lg" />
                  ))}
                </div>
                <p className="text-gray-600 italic mb-6 text-lg">
                  "{testimonials[activeIndex].content}"
                </p>
                <h4 className="text-xl font-bold text-gray-800">
                  {testimonials[activeIndex].name}
                </h4>
                <p className="text-gray-500">{testimonials[activeIndex].position}</p>
              </div>
            </motion.div>

            <button 
              onClick={prevTestimonial}
              className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-3 shadow-lg hover:shadow-xl transition-all"
            >
              <FaChevronLeft className="text-green-600" />
            </button>
            
            <button 
              onClick={nextTestimonial}
              className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white rounded-full p-3 shadow-lg hover:shadow-xl transition-all"
            >
              <FaChevronRight className="text-green-600" />
            </button>
          </div>

          <div className="flex justify-center mt-8 space-x-2">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => setActiveIndex(index)}
                className={`w-3 h-3 rounded-full transition-all ${
                  index === activeIndex ? 'bg-green-600' : 'bg-gray-300'
                }`}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}
